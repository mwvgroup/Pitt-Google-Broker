name: Test Cloud Run

on: 
  workflow_dispatch:
  push:
  pull_request:
    branches: 
      - '**:**'  # Only run for pull requests submitted from forks

jobs:
  discover_services: # Identify any microservices that have an associated test suite
    uses: ./.github/workflows/FindMicroservices.yml

  build_images: # Build docker images
    name: Build Images
    needs: discover_services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repository

  run_tests:  # Run the tests for each service
    name: Test Service
    needs: [build_images, discover_services]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service_directory: ${{ fromJson(needs.discover_services.outputs.microservices) }}

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Install coverage tool
        run: |
          pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run -m unittest
          coverage xml -o report_${{ matrix.python }}.xml
          coverage report
          
      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          path: report_${{ matrix.python }}.xml
          
      # Report test coverage to codacy for the current set of tests
      - name: Report partial coverage results
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --partial -l Python -r report_${{ matrix.python-version }}.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  codacy-coverage-reporter:  # Tell codacy we are done reporting test coverage
    name: Report code coverage
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Finish reporting coverage
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
